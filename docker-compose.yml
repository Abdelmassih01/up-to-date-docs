services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crawler-app
    environment:
      - CHROMA_HOST=chroma        # use service name to resolve in Docker network
      - CHROMA_PORT=8000
      - CHROMA_COLLECTION=crawled_docs_pages
      - EMBED_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - EMBED_DIM=384
      - HF_HOME=/root/.cache/huggingface
      - TRANSFORMERS_CACHE=/root/.cache/huggingface
      - CHROMA_MODE=persistent
      - CHROMA_PATH=/app/data/chroma
      - MONGODB_URI=mongodb://abdelmassih:dayu2a24@mongo:27017/?authSource=admin
      - MONGODB_DB=docsdb
    depends_on:
      - chroma
      - mongo
    volumes:
      - /home/abdelmassih/srv/crawler/data/hf-cache:/root/.cache/huggingface
      - /home/abdelmassih/srv/crawler/data/torch-cache:/root/.cache/torch
      - /home/abdelmassih/srv/crawler/data/chroma:/app/data/chroma
    ports:
      - "127.0.0.1:8080:8000"   # only listen on loopback; Nginx will proxy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3

  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    environment:
      - ANONYMIZED_TELEMETRY=False
    ports:
      - "127.0.0.1:8001:8000"   # private
    restart: unless-stopped

  mongo:
    image: mongo:7.0
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=abdelmassih
      - MONGO_INITDB_ROOT_PASSWORD=dayu2a24
      - MONGO_INITDB_DATABASE=docsdb
    volumes:
      - /home/abdelmassih/srv/crawler/data/mongo:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
